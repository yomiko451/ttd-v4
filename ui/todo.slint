import {Date, Button, LineEdit, HorizontalBox, CheckBox, ComboBox, VerticalBox, DatePickerPopup, Slider, SpinBox, Spinner, TabWidget, GroupBox, GridBox, ListView, ScrollView} from "std-widgets.slint";
import {UiData} from "./global.slint";


enum TodoRank {
    Emergency,

}

component TodoCard inherits Rectangle {
    width: 75px;
    height: 95px;
    background: UiData.primary-color;
    border-radius: 10px;
} 

export component Todo inherits HorizontalLayout {
    width: 100%;
    padding-top: UiData.tab-padding-top-bottom;
    padding-bottom: UiData.tab-padding-top-bottom;
    padding-left: UiData.tab-padding-left-right;
    padding-right: UiData.tab-padding-left-right;
    spacing: UiData.big-space;
    function reset() {
        selected-date = UiData.default-date;
    }
    property <[string]> todo-type: ["单次", "每日", "每周", "每月", "进度"];
    property <[string]> weeks: ["周一", "周二", "周三", "周四", "周五", "周六", "周日"];
    property <int> day: 1;
    property <int> current-progress: 50;
    property <int> max-progress: 100;
    out property <Date> selected-date: UiData.default-date;
    VerticalLayout {
        width: 40%;
        spacing: UiData.space;
        HorizontalLayout {
            spacing: UiData.space;
            selected-type := ComboBox {
                width: UiData.combobox-width;
                model: todo-type;
                current-value: todo-type[0];
                selected(current-value) => {
                    reset();
                }
            }

            date-picker := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click-outside;
                accepted(date) => {
                    selected-date = date;
                    self.close();
                }
                canceled => {
                    self.close();
                }
            }

            if selected-type.current-index == 0: HorizontalLayout {
                horizontal-stretch: 1;
                spacing: UiData.padding;
                Button {
                    text: selected-date == UiData.default-date ? "选择日期" : selected-date.year + "年" + selected-date.month + "月" + selected-date.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if selected-type.current-index == 1: HorizontalLayout {
                vertical-stretch: 1;
                Button {
                    text: selected-date == UiData.default-date ? "截止日期（可选）" : selected-date.year + "年" + selected-date.month + "月" + selected-date.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if selected-type.current-index == 2: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                ComboBox {
                    width: UiData.combobox-width;
                    model: weeks;
                    current-value: weeks[0];
                }

                Button {
                    text: selected-date == UiData.default-date ? "截止日期（可选）" : selected-date.year + "年" + selected-date.month + "月" + selected-date.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if selected-type.current-index == 3: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    value: day;
                }

                Button {
                    text: selected-date == UiData.default-date ? "截止日期（可选）" : selected-date.year + "年" + selected-date.month + "月" + selected-date.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if selected-type.current-index == 4: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    value: current-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        current-progress = value;
                    }
                }

                Spinner {
                    progress: current-progress / max-progress;
                }

                SpinBox {
                    width: UiData.spinbox-width;
                    value: max-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        max-progress = value;
                    }
                }
            }
        }

        HorizontalLayout {
            spacing: UiData.padding;
            LineEdit { }

            Button {
                text: "添加待办";
            }
        }
        ListView {

        }
        
    }

    VerticalLayout {
        horizontal-stretch: 1;
        spacing: UiData.space;
        HorizontalLayout {
            alignment: space-between;
            Button {
                text: "上一个月";
            }
            Text {
                text: "2020年09月";
                vertical-alignment: center;
            }
            Button {
                text: "下一个月";
            }
            
        }
        
        HorizontalLayout {
            alignment: center;
            spacing: UiData.space;
            height: 95%;
                for i in 7: VerticalLayout {
                    alignment: center;
                    spacing: UiData.space;
                    for i in 6: TodoCard {
                        
                    }
                } 
        }
        
    }
}

