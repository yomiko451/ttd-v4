import {Date, Button, LineEdit, HorizontalBox, CheckBox, ComboBox, VerticalBox, DatePickerPopup, Slider, SpinBox, Spinner, TabWidget, GroupBox, GridBox, ListView, ScrollView} from "std-widgets.slint";
import { TodoData, TodoKind, UiData } from "global.slint";


component TodoCard inherits Rectangle {
    in-out property <int> day;
    width: 75px;
    height: 100px;
    background: UiData.primary-color;
    border-radius: UiData.border-radius;
    VerticalLayout {
        height: 100%;
        width: 100%;
        spacing: UiData.space;
        HorizontalLayout {
            height: 50%;
            width: parent.width;
            spacing: UiData.space;
            Text {
                width: 75%;
                text: day == 0 ? "" : day;
                font-size: 32px;
                vertical-alignment: center;
                horizontal-alignment: center;
                color: UiData.secondry-text-color;
            }
        }
    }
}

export component Todo inherits HorizontalLayout {
    width: 100%;
    padding-top: UiData.tab-padding-top-bottom;
    padding-bottom: UiData.tab-padding-top-bottom;
    padding-left: UiData.tab-padding-left-right;
    padding-right: UiData.tab-padding-left-right;
    spacing: UiData.space-big;
    property <[string]> todo-type: ["单次", "每日", "每周", "每月", "进度"];
    property <[string]> weeks: ["周一", "周二", "周三", "周四", "周五", "周六", "周日"];
    property <int> day: 1;
    in-out property <string> pop-window-text;
    function input_check() -> bool {
        if (text-le.text.is-empty) {
            pop-window-text  = "待办内容不能为空！";
            return false;
        } else if (TodoData.new-todo.kind == TodoKind.Once && TodoData.new-todo.once == TodoData.default-date) {
            pop-window-text  = "请选择待办日期！";
            return false;
        } else {
            return true;
        }
    }
    function add-todo() {
        if (!input_check()) {
            pop.show();
            return;
        }
        TodoData.new-todo.text = text-le.text;
        text-le.text = "";
        TodoData.add-todo(TodoData.new-todo);
    }
    VerticalLayout {
        width: 40%;
        spacing: UiData.space;
        HorizontalLayout {
            spacing: UiData.space;
            pop := PopupWindow {
                width: UiData.pop-window-width;
                height: UiData.pop-window-height;
                x: (parent.width - self.width) / 2;
                y: UiData.pop-window-y;
                Rectangle {
                    width: 100%;
                    height: 100%;
                    background: UiData.primary-color;
                    border-radius: UiData.border-radius;
                    Text {
                        text: pop-window-text;
                        font-size: UiData.font-size-big;
                        color: UiData.secondry-text-color;
                    }
                }
            }
            type-cbx := ComboBox {
                width: UiData.combobox-width;
                model: todo-type;
                selected(_) => {
                    TodoData.new-todo.kind = TodoData.convert-int-to-todokind(self.current-index);
                    if TodoData.new-todo.kind == TodoKind.Once || TodoData.new-todo.kind == TodoKind.Progress {
                        TodoData.new-todo.recurrence = false;
                    } else {
                        TodoData.new-todo.recurrence = true;
                    }
                }
            }

            date-picker-once := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click-outside;
                accepted(date) => {
                    TodoData.new-todo.once = date;
                    self.close();
                }
                canceled => {
                    self.close();
                }
            }

            date-picker := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click-outside;
                accepted(date) => {
                    TodoData.new-todo.deadline = date;
                    self.close();
                }
                canceled => {
                    self.close();
                }
            }

            if type-cbx.current-index == 0: HorizontalLayout {
                horizontal-stretch: 1;
                spacing: UiData.padding;
                Button {
                    text: TodoData.new-todo.once == TodoData.default-date ? "选择日期" : TodoData.new-todo.once.year + "年" + TodoData.new-todo.once.month + "月" + TodoData.new-todo.once.day + "日";
                    clicked => {
                        date-picker-once.show();
                    }
                }
            }
            if type-cbx.current-index == 1: HorizontalLayout {
                vertical-stretch: 1;
                Button {
                    text: TodoData.new-todo.deadline == TodoData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 2: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                ComboBox {
                    width: UiData.combobox-width;
                    model: weeks;
                    selected(_) => {
                        TodoData.new-todo.week = self.current-index;
                    }
                }

                Button {
                    text: TodoData.new-todo.deadline == TodoData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 3: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    maximum: 31;
                    minimum: 1;
                    edited(value) => {
                        TodoData.new-todo.day = value;
                    }
                }

                Button {
                    text: TodoData.new-todo.deadline == TodoData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 4: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    value: TodoData.new-todo.current-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        TodoData.new-todo.current-progress = value;
                    }
                }

                Spinner {
                    progress: TodoData.new-todo.current-progress / TodoData.new-todo.max-progress;
                }

                SpinBox {
                    width: UiData.spinbox-width;
                    value: TodoData.new-todo.max-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        TodoData.new-todo.max-progress = value;
                    }
                }
            }
        }

        HorizontalLayout {
            spacing: UiData.padding;
            text-le := LineEdit {
                accepted(_) => {
                    add-todo();
                }
            }

            Button {
                text: "添加待办";
                clicked => {
                    add-todo();
                }
            }
        }
        Rectangle {
            background: UiData.primary-color;
            border-radius: UiData.border-radius;
            HorizontalLayout {
            spacing: UiData.space;
            padding-left: UiData.tab-padding-left-right; 
            padding-right: UiData.tab-padding-left-right;
            padding-top: UiData.padding;
            padding-bottom: UiData.padding;
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                vertical-alignment: center;
                text: "全部";
                TouchArea {
                    clicked => {
                        parent.text = "lalala"
                    }
                }
            }
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                vertical-alignment: center;
                text: "每周";
                TouchArea {
                    clicked => {
                        parent.text = "lalala"
                    }
                }
            }
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                vertical-alignment: center;
                text: "每日";
                TouchArea {
                    clicked => {
                        parent.text = "lalala"
                    }
                }
            }
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                vertical-alignment: center;
                text: "每月";
                TouchArea {
                    clicked => {
                        parent.text = "lalala"
                    }
                }
            }
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                vertical-alignment: center;
                text: "进度";
                TouchArea {
                    clicked => {
                        parent.text = "lalala"
                    }
                }
            }
            Text {
                color: UiData.secondry-text-color;
                font-size: UiData.font-size-big;
                horizontal-stretch: 1;
                horizontal-alignment: right;
                vertical-alignment: center;
                text: "3 /" + TodoData.todo-list.length;
            }
        }
        }
        ListView {
            in-out property <int> selected-todo: -1;
            for todo[i] in TodoData.todo-list: Rectangle {
                border-radius: UiData.border-radius;
                TouchArea {
                    clicked => {
                        selected-todo = i;
                    }
                }
                states [
                    active when selected-todo == i: {
                        background: UiData.todo-selected-color;
                    }
                ]
                animate background {
                     duration: 0.2s;
                     easing: ease-in-out;
                }

                VerticalLayout {
                    if selected-todo == i: HorizontalLayout {
                            alignment: start;
                            spacing: UiData.space;
                            Button {
                                text: "编辑";
                            }
                            Button {
                                text: "删除";
                            }
                            Button {
                                text: "完成";
                            }
                        }
                    padding: UiData.padding;
                    spacing: UiData.padding;
                    HorizontalLayout {
                        alignment: start;
                        spacing: UiData.space-big;
                        Text {
                            text: TodoData.format-todokind(todo.kind);
                        }
                        Text {
                            text: todo.created-at;
                        }
                        if todo.kind != TodoKind.Progress: Text {
                            text: todo.days-to-start == 0 ? "今天" : todo.days-to-start + "天后";
                        }
                        if todo.kind == TodoKind.Progress: Text {
                            text: "已完成" + todo.current-progress + "/" + todo.max-progress;
                        }
                    }
                    HorizontalLayout {
                        spacing: UiData.space;
                        padding-left: UiData.padding;
                        padding-right: UiData.padding;
                        Rectangle {
                            width: UiData.todo-content-marker;
                            //vertical-stretch: 1;
                            border-radius: UiData.border-radius;
                            background: UiData.primary-color;
                        }
                        Text {
                            horizontal-stretch: 1;
                            text: todo.text;
                            wrap: word-wrap;
                            font-size: UiData.font-size-super-big;
                        }
                    }
                }
            }
        }
    }

    VerticalLayout {
        horizontal-stretch: 1;
        spacing: UiData.space;
        HorizontalLayout {
            alignment: space-between;
            Button {
                text: "上一个月";
                clicked => {
                    if TodoData.current-calendar.month - 1 < 1 {
                        TodoData.current-calendar.month = 12;
                        TodoData.current-calendar.year -= 1;
                    } else {
                        TodoData.current-calendar.month -= 1;
                    }
                    TodoData.update-calendar(TodoData.current-calendar);
                }
            }

            Text {
                text: TodoData.current-calendar.year + "年" + TodoData.current-calendar.month + "月";
                vertical-alignment: center;
                font-size: UiData.font-size-big;
            }

            Button {
                text: "下一个月";
                clicked => {
                    if TodoData.current-calendar.month + 1 > 12 {
                        TodoData.current-calendar.month = 1;
                        TodoData.current-calendar.year += 1;
                    } else {
                        TodoData.current-calendar.month += 1;
                    }
                    TodoData.update-calendar(TodoData.current-calendar);
                }
            }
        }

        HorizontalLayout {
            alignment: center;
            spacing: UiData.space;
            height: 95%;
            for weeks in TodoData.calendar: VerticalLayout {
                alignment: center;
                spacing: UiData.space;
                for date in weeks: TodoCard {
                    day: date.day;
                }
            }
        }
    }
}
