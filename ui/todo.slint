import {Date, Button, LineEdit, HorizontalBox, CheckBox, ComboBox, VerticalBox, DatePickerPopup, Slider, SpinBox, Spinner, TabWidget, GroupBox, GridBox, ListView, ScrollView} from "std-widgets.slint";
import {UiData} from "./global.slint";
import { TodoData } from "global.slint";


component TodoCard inherits Rectangle {
    in-out property <int> day;
    width: 75px;
    height: 100px;
    background: UiData.primary-color;
    border-radius: UiData.border-radius;
    VerticalLayout {
        height: 100%;
        width: 100%;
        spacing: UiData.space;
        HorizontalLayout {
            height: 50%;
            width: parent.width;
            spacing: UiData.space;
            Text {
                width: 75%;
                text: day == 0 ? "": day;
                font-size: 32px;
                vertical-alignment: center;
                horizontal-alignment: center;
                color: UiData.secondry-text-color;
            }
        }
    }
} 

export component Todo inherits HorizontalLayout {
    width: 100%;
    padding-top: UiData.tab-padding-top-bottom;
    padding-bottom: UiData.tab-padding-top-bottom;
    padding-left: UiData.tab-padding-left-right;
    padding-right: UiData.tab-padding-left-right;
    spacing: UiData.space-big;
    property <[string]> todo-type: ["单次", "每日", "每周", "每月", "进度"];
    property <[string]> weeks: ["周一", "周二", "周三", "周四", "周五", "周六", "周日"];
    property <int> day: 1;
    VerticalLayout {
        width: 40%;
        spacing: UiData.space;
        HorizontalLayout {
            spacing: UiData.space;
            type-cbx := ComboBox {
                width: UiData.combobox-width;
                model: todo-type;
                selected(_) => {
                    TodoData.new-todo.kind = self.current-index;
                    if TodoData.new-todo.kind == 0 || TodoData.new-todo.kind == 4 {
                        TodoData.new-todo.recurrence = false;
                    } else {
                        TodoData.new-todo.recurrence = true;
                    }
                }
            }

            date-picker-once := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click-outside;
                accepted(date) => {
                    TodoData.new-todo.once = date; // TODO: 这里有点复杂多想想
                    self.close();
                }
                canceled => {
                    self.close();
                }
            }
            date-picker := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click-outside;
                accepted(date) => {
                    TodoData.new-todo.deadline = date;
                    self.close();
                }
                canceled => {
                    self.close();
                }
            }

            if type-cbx.current-index == 0: HorizontalLayout {
                horizontal-stretch: 1;
                spacing: UiData.padding;
                Button {
                    text: TodoData.new-todo.once == UiData.default-date ? "选择日期" : TodoData.new-todo.once.year + "年" + TodoData.new-todo.once.month + "月" + TodoData.new-todo.once.day + "日";
                    clicked => {
                        date-picker-once.show();
                    }
                }
            }
            if type-cbx.current-index == 1: HorizontalLayout {
                vertical-stretch: 1;
                Button {
                    text: TodoData.new-todo.deadline == UiData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 2: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                ComboBox {
                    width: UiData.combobox-width;
                    model: weeks;
                    selected(_) => {
                        TodoData.new-todo.week = self.current-index;
                    }
                }

                Button {
                    text: TodoData.new-todo.deadline == UiData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 3: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    maximum: 31;
                    minimum: 1;
                    edited(value) => {
                        TodoData.new-todo.day = value;
                    }
                }

                Button {
                    text: TodoData.new-todo.deadline == UiData.default-date ? "截止日期（可选）" : TodoData.new-todo.deadline.year + "年" + TodoData.new-todo.deadline.month + "月" + TodoData.new-todo.deadline.day + "日";
                    clicked => {
                        date-picker.show();
                    }
                }
            }
            if type-cbx.current-index == 4: HorizontalLayout {
                vertical-stretch: 1;
                spacing: UiData.padding;
                SpinBox {
                    width: UiData.spinbox-width;
                    value: TodoData.new-todo.current-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        TodoData.new-todo.current-progress = value;
                    }
                }

                Spinner {
                    progress: TodoData.new-todo.current-progress / TodoData.new-todo.max-progress;
                }

                SpinBox {
                    width: UiData.spinbox-width;
                    value: TodoData.new-todo.max-progress;
                    maximum: UiData.spinbox-max;
                    edited(value) => {
                        TodoData.new-todo.max-progress = value;
                    }
                }
            }
        }

        HorizontalLayout {
            spacing: UiData.padding;
            text-le := LineEdit {
                accepted(text) => {
                    TodoData.new-todo.text = text;
                    self.text = "";
                    TodoData.add-todo(TodoData.new-todo);
                }
             }

            Button {
                text: "添加待办";
                clicked => {
                    TodoData.new-todo.text = text-le.text;
                    text-le.text = "";
                    TodoData.add-todo(TodoData.new-todo);
                }
            }
            
        }
        ListView {
            for todo in TodoData.todo-list: VerticalLayout {
                spacing: UiData.padding;
                padding: UiData.padding;
                HorizontalLayout {
                    alignment: start;
                    spacing: UiData.space-big;
                    Text {
                        text: todo-type[todo.kind];
                    }
                    Text {
                        text: todo.recurrence ? "重复" : "不重复";
                    }
                    Text {
                        text: todo.created-at;
                    }
                    if todo.kind != 4: Text {
                        text: todo.days-to-start == 0 ? "今天" : todo.days-to-start + "天后";
                    }
                    if todo.kind == 4: Text {
                        text: todo.current-progress + "/" + todo.max-progress;
                    }
                    
                }
                Rectangle {
                    background: UiData.primary-color;
                    border-radius: UiData.border-radius;
                    HorizontalLayout {
                        padding-left: UiData.padding;
                        padding-right: UiData.padding;
                        Text {
                        horizontal-stretch: 1;
                        text: todo.text;
                        wrap: word-wrap;
                        font-size: UiData.font-size-big;
                        color: UiData.secondry-text-color;
                    }
                    }
                }
                    
            }
        }
        
    }

    VerticalLayout {
        horizontal-stretch: 1;
        spacing: UiData.space;
        HorizontalLayout {
            alignment: space-between;
            Button {
                text: "上一个月";
                clicked => {
                    if TodoData.current-date.month - 1 < 1 {
                        TodoData.current-date.month = 12;
                        TodoData.current-date.year -= 1;
                    } else {
                        TodoData.current-date.month -= 1;
                    };
                    TodoData.update-calendar(TodoData.current-date);
                }
            }
            Text {
                text: TodoData.current-date.year + "年" + TodoData.current-date.month + "月";
                vertical-alignment: center;
                font-size: UiData.font-size-big;
            }
            Button {
                text: "下一个月";
                clicked => {
                    if TodoData.current-date.month + 1 > 12 {
                        TodoData.current-date.month = 1;
                        TodoData.current-date.year += 1;
                    } else {
                        TodoData.current-date.month += 1;
                    };
                    TodoData.update-calendar(TodoData.current-date);
                }
            }
            
        }
        
        HorizontalLayout {
            alignment: center;
            spacing: UiData.space;
            height: 95%;
                for weeks in TodoData.calendar: VerticalLayout {
                    alignment: center;
                    spacing: UiData.space;
                    for date in weeks: TodoCard {
                        day: date.day;
                    }
                } 
        }
        
    }
}

