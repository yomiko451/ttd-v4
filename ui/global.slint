import {Date} from "std-widgets.slint";



export enum Tab {
    Home,
    Todo,
    Anime,
    News,
    Stats
}


export struct Anime {
    name: string,
    cover: image,
}

export struct DayAnime {
    text: string,
    anime-list: [Anime]
}


@rust-attr(derive(serde::Serialize, serde::Deserialize))
struct Todo {
    text: string,
    created-at: string,
    recurrence: bool,
    week: int,
    day: int,
    once: Date,
    current_progress: int,
    max_progress: int,
    deadline: Date,
    kind: int,
    days_to_start: int,
}


export global AnimeData {
    callback update-anime-data;// TODO:  add implementation
    in-out property <bool> is-loading: true;
    in-out property <Date> anime-schedule;
    in-out property <[DayAnime]> week-anime-list: [
        {text: "周一（月）", anime-list: []},
        {text: "周二（火）", anime-list: []},
        {text: "周三（水）", anime-list: []},
        {text: "周四（木）", anime-list: []},
        {text: "周五（金）", anime-list: []},
        {text: "周六（土）", anime-list: []},
        {text: "周日（日）", anime-list: []}
    ];
    
}

export global UiData {
    in-out property <length> app-width: 1280px;
    in-out property <length> app-height: 800px;
    in-out property <length> avatar-size: 80px;
    in-out property <length> avatar-size-big: 120px;
    in-out property <color> primary-color: #88C9A1;//rgb(237, 239, 239);
    in-out property <color> menu-button-clicked-color: #5BB48B;//rgb(221, 221, 221);
    in-out property <length> cover-width: 120px;
    in-out property <length> cover-height: 150px;
    in-out property <color> primary-text-color: #303133;
    in-out property <color> secondry-text-color: #FFFFFF;
    in-out property <length> default-font-size: 14px;
    in-out property <length> font-size-big: 16px;
    in-out property <length> tab-padding-top-bottom: 30px;
    in-out property <length> tab-padding-left-right: 15px;
    out property <int> spinbox-max: 10000;
    in-out property <length> spinbox-width: 110px;
    in-out property <length> combobox-width: 100px;
    in-out property <length> space: 5px;
    in-out property <length> space-big: 15px;
    in-out property <length> padding: 5px;
    //in-out property <length> padding-big: 10px;
    in-out property <length> border-radius-big: 10px;
    in-out property <length> border-radius: 5px;
    in-out property <length> menu-button-height: 40px;
    in-out property <length> menu-button-font-size: 18px;

    in-out property <length> anime-list-title-height: 30px;

    in-out property <Date> default-date: {
        year: 2025,
        month: 1,
        day: 1
    };
    in-out property <Tab> current-tab: Tab.Home;
}



export global TodoData {
    callback add-todo(todo: Todo);
    callback update-calendar(new-date: Date);
    in-out property <[[Date]]> calendar;
    in-out property <Date> current-date;
    in-out property <[Todo]> todo-list;
    in-out property <Todo> new-todo: {
        text: "",
        created-at: "",
        recurrence: false,
        week: 0,
        day: 1,
        once: UiData.default-date,
        current_progress: 50,
        max_progress: 100,
        deadline: UiData.default-date,
        kind: 0,
        days_to_start: 0
    };
}



