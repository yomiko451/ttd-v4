import {UiData, DayAnime, AnimeData, TodoData, Anime} from "global.slint";

import { TabWidget, StandardTableView, GroupBox, ScrollView, ListView, Button } from "std-widgets.slint";
export component Anime inherits VerticalLayout {
    width: 100%;
    padding-top: UiData.tab-padding-top-bottom;
    padding-bottom: UiData.tab-padding-top-bottom;
    padding-left: UiData.tab-padding-left-right;
    padding-right: UiData.tab-padding-left-right;
    HorizontalLayout {
        spacing: UiData.space;
        padding-left: UiData.tab-padding-left-right;
        padding-right: UiData.tab-padding-left-right;
        padding-bottom: UiData.padding;
        Button {
            text: "上一季度";
            enabled: !AnimeData.is-loading;
            clicked => {
                if AnimeData.anime-schedule.month - 3 < 1 {
                    AnimeData.anime-schedule.year -= 1;
                    AnimeData.anime-schedule.month = 10;
                } else {
                    AnimeData.anime-schedule.month -= 3;
                }
                AnimeData.is-loading = true;
            }
        }
        Text {
            horizontal-stretch: 1;
            text: AnimeData.is-loading? "番剧信息获取中，请稍后……" : AnimeData.anime-schedule.year + "年" + AnimeData.anime-schedule.month + "月番（数据源长门有C）";
            font-size: UiData.font-size-big;
            vertical-alignment: center;
            horizontal-alignment: center;
        }
        Button {
            text: "下一季度";
            enabled: !AnimeData.is-loading;
            clicked => {
                if AnimeData.anime-schedule.year == TodoData.current-date.year && AnimeData.anime-schedule.month + 3 > TodoData.current-date.month {
                    return;
                }
                else if AnimeData.anime-schedule.month + 3 > 12 {
                    AnimeData.anime-schedule.year += 1;
                    AnimeData.anime-schedule.month = 1;
                } else {
                    AnimeData.anime-schedule.month += 3;
                }
                AnimeData.is-loading = true;
            }
        }
    }

    ListView {
        for day-anime in AnimeData.week-anime-list: VerticalLayout {
            in-out property <int> img-col: floor((self.width - (UiData.padding * 2 + UiData.space)) / (UiData.cover-width + UiData.space)); 
            in-out property <int> img-row: floor(day-anime.anime-list.length / img-col);
            in-out property <int> remainder: mod(day-anime.anime-list.length, img-col);
            padding: UiData.padding;
            spacing: UiData.space;
            Rectangle {
                background: UiData.primary-color;
                border-radius: UiData.border-radius;
                height: UiData.anime-list-title-height;
                width: 100%;
                Text {
                    text: day-anime.text;
                    horizontal-alignment: center;
                    font-size: UiData.font-size-big;
                    color: UiData.secondry-text-color;
                }
            }

            for i in img-row: HorizontalLayout {
                spacing: UiData.space;
                for j in img-col: VerticalLayout {
                    in-out property <Anime> anime: day-anime.anime-list[i * img-col + j];
                    Rectangle {
                        width: 120px;
                        height: 150px;
                        border-radius: UiData.border-radius;
                        clip: true;
                        Image {
                        source: anime.cover;
                        width: 100%;
                        height: 100%;
                    }
                    }

                    Text {
                        width: 120px;
                        text: anime.name;
                        wrap: word-wrap;
                        horizontal-alignment: center;
                    }
                }
            }
            // 处理最后一行剩余的图片
            HorizontalLayout {
                spacing: UiData.space;
                for i in remainder: VerticalLayout {
                    in-out property <Anime> anime: day-anime.anime-list[img-row * img-col + i];
                    Rectangle {
                        width: UiData.cover-width;
                        height: UiData.cover-height;
                        border-radius: UiData.border-radius;
                        clip: true;
                        Image {
                        source: anime.cover;
                        width: 100%;
                        height: 100%;
                    }
                    }

                    Text {
                        width: 120px;
                        text: anime.name;
                        wrap: word-wrap;
                        horizontal-alignment: center;
                    }
                }
            }
        }
    }
}
